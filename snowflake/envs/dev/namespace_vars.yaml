IAM:
  role_name: "S3ToStorage_integration"
# TODO:大域変数みたいな使い方したくないが、DRY優先とするならrootにおく？ファイル名namespace_vars_dev.yamlとかにしてやればよさそう
# TODO:完全修飾をこのyaml上でやってるやつとtfでやってるやつがある。混乱を招きそうなので統一したい。
# tfでやるとsnowflake側で実行エラー(terraformで特定できない)になる可能性ある模様。可能ならここで完全修飾必要ならやっとく。
warehouses:
  - name: "TEST_WAREHOUSE"
    warehouse_size: "XSMALL"
    auto_suspend: 60
    auto_resume: true
    initially_suspended: true

storage_integration:
  name: "TEST_STORAGE_INTEGRATION"
  type: "EXTERNAL_STAGE"
  storage_provider: "S3"
  enabled: true

stage:
  name: "TEST_STAGE"
  database: "TEST_DB"
  schema: "TEST_SCHEMA"
  storage_integration: "TEST_STORAGE_INTEGRATION"
  encryption: "NONE"

file_formats:
  - name: "TEST_FORMAT"
    database: "TEST_DB"
    schema: "TEST_SCHEMA"
    format_type: "CSV"

pipes:
  - name: "TEST_PIPE"
    database: "TEST_DB"
    schema: "TEST_SCHEMA"
    comment: "こっち使うほうがいい？→https://registry.terraform.io/modules/Snowflake-Labs/snowpipe-aws/snowflake/latest#required-parameters"
    auto_ingest: false
    stage_name: "TEST_STAGE"
    target_table: "TEST_TABLE"
    sql_file_name: "copy_statement.sql"
    target_format_name: "TEST_FORMAT"
  - name: "TEST_PIPE2"
    database: "TEST_DB"
    schema: "TEST_SCHEMA"
    comment: "snowsightでデバッグする用"
    auto_ingest: false
    stage_name: "TEST_STAGE"
    target_table: "TEST_TABLE"
    sql_file_name: "copy_statement.sql"
    target_format_name: "TEST_FORMAT"

databases:
  - name: "TEST_DB"
    schemas:
      - "TEST_SCHEMA"
      - "TEST_SCHEMA2"

tables:
  - name: "TEST_TABLE"
    database: "TEST_DB"
    schema: "TEST_SCHEMA"
    column: 
      - name: "A"
        type: "string"
      - name: "B"
        type: "string"

# TODO:ユーザ、ロール系切り離してもいいかも
users:
  - name: "ANALYST1"
  - name: "DEV1"
  - name: "DEV2"

rsa_user:
  - name: "AIRFLOW"
    login_name:  "AIRFLOW"
    rsa_public_key: "/keys/rsa_key.pub" # rootからの相対パス
    default_role: "AIRFLOW_ROLE"
    default_warehouse: "TEST_WAREHOUSE"
    default_namespace: "TEST_DB.TEST_SCHEMA"
# https://docs.snowflake.com/ja/user-guide/key-pair-auth


# AIRFLOWに必要な権限情報参考：https://docs.snowflake.com/ja/user-guide/data-load-snowpipe-intro#pausing-or-resuming-pipes
# 上記に加えてwarehouseのUSAGE,FILE FORMATSのUSAGEが必要。
account_grants_privileges:
  - account_role_name: "AIRFLOW_ROLE"
    privileges:
    - "USAGE"
    object_type: "WAREHOUSE"
    object_name: "TEST_WAREHOUSE"



grants_user_to_account:
  - role_name: "AIRFLOW_ROLE"
    user_name: "AIRFLOW"

# データベースの権限付与
# TODO:適切な粒度の検討。とりあえずは階層が深くなりすぎないように分割する。
database_grants_on_database:
  - database_role_name: "AIRFLOW_EXECUTE_PIPE"
    on_database: "TEST_DB"
    privileges:
      - USAGE

database_grants_on_schema:
  - database_role_name: "AIRFLOW_EXECUTE_PIPE"
    on_database: "TEST_DB" # roleもschemaも完全修飾名のため設定。
    on_schema: "TEST_SCHEMA" # TODO:ここでリストにした方がいいか?
    privileges: 
      - USAGE

# スキーマオブジェクトの権限付与
database_grants_in_schema:
  - database_role_name: "DB_READ_ROLE"
    database_name: "TEST_DB"
    comment: "test"
    in_schema: "TEST_SCHEMA"
    object_privileges: 
      TABLES:
        - SELECT
  - database_role_name: "AIRFLOW_EXECUTE_PIPE"
    database_name: "TEST_DB"
    comment: ""
    in_schema: "TEST_SCHEMA"
    object_privileges: 
      TABLES:
        - SELECT
        - INSERT
      STAGES:
        - USAGE # 外部ステージ(S3)のため。
      FILE FORMATS:
        - USAGE  
      PIPES:
        - OPERATE # TODO:これで権限付与できていない模様。

# TODO:warehouseのUSAGE
grants_ownership:
  - object_type: "PIPE"
    object_name: "TEST_DB.TEST_SCHEMA.TEST_PIPE"
    account_role_name: "AIRFLOW_ROLE"

account_roles:
  - name: "ANALYST_ROLE"
    comment: "test comment"
    grants_database_roles:
      - database: "TEST_DB"
        names:
        - "DB_READ_ROLE"
  - name: "AIRFLOW_ROLE"
    comment: "Airflow only"
    grants_database_roles:
      - database: "TEST_DB"
        names:
        - "AIRFLOW_EXECUTE_PIPE"
