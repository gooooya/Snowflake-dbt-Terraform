include {
  path = find_in_parent_folders("root.hcl")
}

locals {
  parent = read_terragrunt_config(find_in_parent_folders("root.hcl")).locals
  ns_vars = yamldecode(file(find_in_parent_folders("namespace_vars.yaml")))
}

terraform {
  source = "${local.parent.root_folder}\\${local.parent.relative_path_from_route.module.}"
}

dependency "database" {
  config_path = "${local.parent.root_folder}\\${local.parent.relative_path_from_route.terragrunt.dev.}"
  mock_outputs = {
    db_name = "db_name"
  }
}

dependencies {
  paths = ["${local.parent.root_folder}\\${local.parent.relative_path_from_route.terragrunt.dev.}", "../rds"]
}

inputs = {
  database = dependency.database.outputs.db_name
  users = [for u in local.ns_vars.users : { name = u.name }]
}




tf
main.tf
resource "snowflake_account_role" "this" {
  for_each = { for r in var.roles : r.name => r }

  name = each.value.name
  comment = each.value.comment
}

variable.tf
variable "relation" {
  type = list(object({
    roles = string
    comment = string
  }))
}

inputs = {
  grants = flatten([
    for g in local.ns_vars.grants:
    [
      for u in g.user_names : {
        role_name = g.role_name
        user_name = u
      }
    ]
  ])
}
